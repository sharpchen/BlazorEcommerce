@inject IProductService ProductService
@implements IDisposable

<center>
    <h2>Top Products of Today!</h2>
</center>
@if (ProductService.Products is not { Count: > 0 })
{
    <span>@ProductService.Message</span>
}
else
{
    <div class="container">
        @foreach (var p in ProductService.Products.Where(x => x.IsFeatured))
        {
            <div class="featured-product">
                <div>
                    <a href="product/@p.Id">
                        <img src="@p.ImageUrl"><img>
                    </a>
                </div>
                <h4><a href="product/@p.Id">@p.Title</a></h4>
                @if (p.Variants is { Count: > 0 })
                {
                    <h5 class="price">@p.PriceRange</h5>
                }
            </div>
        }
    </div>
}

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }
    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }
}